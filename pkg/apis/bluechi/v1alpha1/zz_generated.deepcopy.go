//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/* SPDX-License-Identifier: LGPL-2.1-or-later */

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueChiNode) DeepCopyInto(out *BlueChiNode) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueChiNode.
func (in *BlueChiNode) DeepCopy() *BlueChiNode {
	if in == nil {
		return nil
	}
	out := new(BlueChiNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in BlueChiNodes) DeepCopyInto(out *BlueChiNodes) {
	{
		in := &in
		*out = make(BlueChiNodes, len(*in))
		copy(*out, *in)
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueChiNodes.
func (in BlueChiNodes) DeepCopy() BlueChiNodes {
	if in == nil {
		return nil
	}
	out := new(BlueChiNodes)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueChiSystem) DeepCopyInto(out *BlueChiSystem) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueChiSystem.
func (in *BlueChiSystem) DeepCopy() *BlueChiSystem {
	if in == nil {
		return nil
	}
	out := new(BlueChiSystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlueChiSystem) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueChiSystemList) DeepCopyInto(out *BlueChiSystemList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BlueChiSystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueChiSystemList.
func (in *BlueChiSystemList) DeepCopy() *BlueChiSystemList {
	if in == nil {
		return nil
	}
	out := new(BlueChiSystemList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BlueChiSystemList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlueChiSystemSpec) DeepCopyInto(out *BlueChiSystemSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make(BlueChiNodes, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlueChiSystemSpec.
func (in *BlueChiSystemSpec) DeepCopy() *BlueChiSystemSpec {
	if in == nil {
		return nil
	}
	out := new(BlueChiSystemSpec)
	in.DeepCopyInto(out)
	return out
}
